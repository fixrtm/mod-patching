name: Master Ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: { }

jobs:
  build:
    name: (Cross) Build
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS: no cross on macOS
          - target: x86_64-apple-darwin
            os: macos-latest
            test: true
          # windows: no cross
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            test: true
          # linux: with cross on ubuntu
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            test: true

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '8'

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: cli-tool -> cli-tool/build/cargo
          key: ${{ matrix.target }}

      - name: setup variables
        id: vars
        shell: bash
        run: |
          # if target is windows, extension is exe
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            echo '::set-output name=ext::.exe'
          else
            echo '::set-output name=ext::'
          fi
          # if linux, use cross but not for other platforms
          if [[ "$(uname -srm)" == *"Linux"* ]]; then
            echo '::set-output name=cross::true'
          else
            echo '::set-output name=cross::false'
          fi

      - name: Install Cross
        run: cargo install cross && cross --version
        if: ${{ fromJson(steps.vars.outputs.cross) }}
      - name: Build
        env:
          RUSTFLAGS: -C target-feature=+crt-static
        run: ./gradlew cli-tool:assemble -Pcli-tool-target=${{ matrix.target }} -Pcli-tool-cross=${{ steps.vars.outputs.cross }}
      - name: Test
        if: ${{ matrix.test }}
        env:
          RUSTFLAGS: -C target-feature=+crt-static
        run: ./gradlew cli-tool:check -Pcli-tool-target=${{ matrix.target }} -Pcli-tool-cross=${{ steps.vars.outputs.cross }}

      - uses: actions/upload-artifact@v3
        with:
          name: mod-patching-${{ matrix.target }}
          path: cli-tool/build/cargo/${{ matrix.target }}/release/mod-patching${{ steps.vars.outputs.ext }}

  conclude:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - build
    steps:
      - name: Conclude Tests
        env: { NEEDS: "${{ toJSON(needs) }}" }
        run: |
          echo "$NEEDS" | jq -c '. | to_entries[] | [.key, .value.result]'
          echo "$NEEDS" | jq -e '. | all(.result == "success")' > /dev/null
